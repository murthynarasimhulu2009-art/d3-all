DATA
│
└── root: [                                   <-- array of hierarchical node objects
      ┌───────────────────────────────────────────────────────────────────────┐
      │ {                                                                     │
      │   name: string,               // identifier of the node (e.g., "root", │
      │                               // "Branch A", "Leaf 1") – categorical      │
      │   children: [               // optional array of child nodes (same │
      │       { … } ,                // structure). Presence of this      │
      │       { … } ,                // field makes the data hierarchical │
      │       …                      // and enables the hierarchy transform│
      │   ]                                                       │
      │ }                                                                     │
      └───────────────────────────────────────────────────────────────────────┘
]

Explanation of fields

- name – *nominal* (categorical) identifier for each node in the hierarchy.  
- children – *array* of child node objects; absent for leaf nodes.  
- x – *quantitative* (generated by the `tree` transform) representing the angular coordinate (radians) of the node in polar space.  
- y – *quantitative* (generated by the `tree` transform) representing the radial distance from the origin.  
- depth – *quantitative* (generated by the `hierarchy` transform) indicating the level of the node (0 for root, 1 for branches, 2 for leaves).  

Notes on structure

- The raw data is a single root object with a `children` array that contains two branch objects (`Branch A`, `Branch B`).  
- Each branch object also has a `children` array containing leaf objects (`Leaf 1` … `Leaf 8`).  
- The `hierarchy` and `tree` transforms enrich each node with the computed fields `x`, `y`, and `depth`, which are then used by the `nodes` layer (circles) and the `links` layer (lines) in the radial‑tree visualization.